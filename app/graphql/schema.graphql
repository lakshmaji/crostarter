type Category {
  createdAt: ISO8601DateTime!
  description: String
  iconPathName: String
  id: ID!
  name: String
  projects: [Project!]

  """
  No of projects
  """
  projectsCount: Int
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of CategoryCreate
"""
input CategoryCreateInput {
  categoryInput: CategoryInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CategoryCreate.
"""
type CategoryCreatePayload {
  category: Category!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

input CategoryInput {
  createdAt: ISO8601DateTime
  description: String
  iconPathName: String
  id: ID
  name: String
  updatedAt: ISO8601DateTime
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  """
  Creates a new category
  """
  categoryCreate(
    """
    Parameters for CategoryCreate
    """
    input: CategoryCreateInput!
  ): CategoryCreatePayload

  """
  An example field added by the generator
  """
  testField: String!

  """
  Creates a new user
  """
  userCreate(
    """
    Parameters for UserCreate
    """
    input: UserCreateInput!
  ): UserCreatePayload
}

type Project {
  category: Category!
  createdAt: ISO8601DateTime!
  creatorId: Int!
  description: String
  details: String
  endDate: ISO8601Date
  fundingGoal: Float
  id: ID!
  title: String
  updatedAt: ISO8601DateTime!
  website: String
}

"""
The query root of crostarter schema
"""
type Query {
  """
  List all categories
  """
  categories: [Category!]!

  """
  Find category by id
  """
  category(id: Int!): Category

  """
  Find project by id
  """
  project(id: Int!): Project

  """
  List all projects
  """
  projects: [Project!]!

  """
  An example field added by the generator
  """
  testField: String!
}

type User {
  createdAt: ISO8601DateTime!
  id: ID!
  sessionToken: String
  updatedAt: ISO8601DateTime!
  username: String
}

"""
Autogenerated input type of UserCreate
"""
input UserCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userInput: UserInput!
}

"""
Autogenerated return type of UserCreate.
"""
type UserCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

input UserInput {
  createdAt: ISO8601DateTime
  id: ID
  passwordDigest: String
  sessionToken: String
  updatedAt: ISO8601DateTime
  username: String
}
